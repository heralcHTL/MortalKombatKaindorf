/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bl.Axe;
import bl.Human;
import bl.Item;
import bl.MKKListModel;
import bl.MKKTableCellRenderer;
import bl.MKKTableModel;
import bl.Orc;
import bl.Player;
import bl.Sword;

/**
 *
 * @author Alex
 */
public class MKKGui extends javax.swing.JFrame {

    private MKKListModel mlm = new MKKListModel();
    private MKKTableModel mtm = new MKKTableModel();
    
    private Human h = new Human("Human");
    private Orc o = new Orc("Orc");
    
    /**
     * Creates new form MKKGui
     */
    public MKKGui() {
        initComponents();
        initFirstValues();
        taTable.setModel(mtm);
        taTable.setDefaultRenderer(Object.class, new MKKTableCellRenderer());
        
        liItemList.setModel(mlm);
//        liItemList.setCellRenderer(new MKKListRenderer());
    }

    public void initFirstValues(){
        mtm.addPlayer(h);
        h.addItem(new Sword("Longsword"));
        
        
        mtm.addPlayer(o);
        o.addItem(new Axe("Two-Handed Axe"));
        o.addItem(new Axe("Two-Handed Axe"));
        o.addItem(new Axe("Two-Handed Axe"));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        taTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        liItemList = new javax.swing.JList<>();

        jMenuItem1.setText("Challenge Player!");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onChallenge(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(50, 50));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(453, 600));

        taTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        taTable.setComponentPopupMenu(jPopupMenu1);
        taTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                onUpdateThings(evt);
            }
        });
        jScrollPane1.setViewportView(taTable);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(150, 100));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(150, 131));

        jScrollPane2.setViewportView(liItemList);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onUpdateThings(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onUpdateThings
        // TODO add your handling code here:
        int index = taTable.getSelectedRow();
        Player p = mtm.getPlayer(index);
        mlm.setLiItem(p.getEqItems());
    }//GEN-LAST:event_onUpdateThings

    private void onChallenge(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onChallenge
        // TODO add your handling code here:
        try
        {
            int index = taTable.getSelectedRow();
        mtm.challenge(index);
        } catch (IndexOutOfBoundsException e)
        {
            System.out.println("No Player selected!");
        }
        
    }//GEN-LAST:event_onChallenge

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MKKGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MKKGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MKKGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MKKGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MKKGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Item> liItemList;
    private javax.swing.JTable taTable;
    // End of variables declaration//GEN-END:variables
}
